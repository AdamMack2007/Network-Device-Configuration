- name: Get random VPC Domain ID
  set_fact:
    nxos_vpc_domain: "{{ 1000 | random }}"
    cacheable: true
  when: 
    - vpc_primary == True
    - nxos_vpc_domain is not defined 

- name: Set VPC Domain ID for Secondary Unit
  set_fact: 
    nxos_vpc_domain: "{{ hostvars[ha_peer]['nxos_vpc_domain'] }}"
    cacheable: true
  when:
    - vpc_primary == False
    - nxos_vpc_domain is not defined 
    - hostvars[ha_peer]['nxos_vpc_domain'] is defined

- name: Create VPC Domain Primary
  nxos_vpc:
    domain: "{{ nxos_vpc_domain }}"
    role_priority: "1"
    peer_gw: true
    pkl_src: "{{ ansible_host }}"
    pkl_dest: "{{ hostvars[ha_peer]['ansible_host'] }}"
    auto_recovery: true
  when: vpc_primary == True

- name: Create VPC Domain Secondary
  nxos_vpc:
    domain: "{{ nxos_vpc_domain }}"
    role_priority: "2"
    peer_gw: true
    pkl_src: "{{ ansible_host }}"
    pkl_dest: "{{ hostvars[ha_peer]['ansible_host'] }}"
    auto_recovery: true
  when: vpc_primary == False

- name: Configure VPC Peer-Link Interfaces
  nxos_vpc_interface:
    state: present
    portchannel: "{{ item['portchannel_id'] }}"
    peer_link: yes
  loop: "{{ interface_config }}"
  when:
    - item['vpc_peerlink'] is defined

- name: Configure VPC Interfaces
  nxos_vpc_interface:
    state: present
    portchannel: "{{ item['portchannel_id'] }}" 
    vpc: "{{ item['vpc'] }}"
  loop: "{{ interface_config }}"
  when:
    - item['vpc'] is defined